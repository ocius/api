name: "Build and Deploy"

on:
  push:
    branches:
      - cd-pipeline
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - cd-pipeline
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

env: 
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: true
    DOTNET_GENERATE_ASPNET_CERTIFICATE: false
    DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
    DOTNET_MULTILEVEL_LOOKUP: 0
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: ap-southeast-2
     
jobs:
  Install:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Installing .NET SDKs and Lambda Tools
    runs-on: ubuntu-latest
    steps:
    - name: Setup .NET 3.1 Core SDK
      uses: actions/checkout@v2
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Setup .NET 3.1 Core SDK
      uses: actions/checkout@v2
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Install Deployment Tools 
      run: dotnet tool install -g Amazon.Lambda.Tools 


  RawDataToClientData:
    needs: Install
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Building and Deploying RawDataToClientData Lambda 
    defaults: 
      run:
        shell: bash
        working-directory: ./Services/RawDataToClientData/RawDataToClientData
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test
    - name: AWS Lambda Deploy
      run: dotnet lambda deploy-function --name RawDataToClientData --region ap-southeast-2 --function-role LambdaDynamo


  XmlToJsonLambda:
    needs: Install
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Building and Deploying XmlToJsonLambda Lambda 
    defaults: 
      run:
        shell: bash
        working-directory: ./Services/XmlToJsonLambda
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test
    - name: AWS Lambda Deploy
      run: dotnet lambda deploy-function --name XmlToJsonLambda --region ap-southeast-2 --function-role LambdaDynamo